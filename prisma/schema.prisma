// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid()) @db.Uuid
  email     String    @unique
  password  String
  name      String
  phone     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  reservations Reservation[]

  @@map("users")
}

model Event {
  id            Int       @id @default(autoincrement())
  uuid          String    @unique @default(uuid()) @db.Uuid
  name          String
  description   String?
  datetimeStart DateTime?
  location      Json?
  totalSeat     Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt

  seats        Seat[]
  reservations Reservation[]

  @@map("events")
}

model Seat {
  id          Int           @id @default(autoincrement())
  uuid        String        @unique @default(uuid()) @db.Uuid
  number      String
  zone        String?
  row         String?
  status      Boolean       @default(true)
  eventId     Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  event       Event         @relation(fields: [eventId], references: [id])
  Reservation Reservation[]

  @@map("seats")
}

model Reservation {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid()) @db.Uuid
  userId    Int
  eventId   Int
  seatId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  event     Event     @relation(fields: [eventId], references: [id])
  seat      Seat      @relation(fields: [seatId], references: [id])

  @@map("reservations")
}
